const { messageCreator } = require("../../helpers/messageCreator");

const helpMessage = messageCreator([
  {
    title: "üí≥ *–û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:*",
    items: [
      "/send amount `@user` ‚Äì –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ USDT",
      "/invoice amount ‚Äì –ü–æ–ª—É—á–∏—Ç—å USDT",
      "/balance ‚Äì –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å",
    ]
  },
  {
    title: "üîê *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º:*",
    items: [
      "/connect ‚Äì –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫",
      "/create ‚Äì –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫",
      "/disconnect ‚Äì –û—Ç–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"
    ]
  },
  {
    title: "‚úèÔ∏è *–ü—Ä–∏–º–µ—Ä—ã:*",
    items: [
      "\`/send 10 @username\`",
      "\`/invoice 50\`"
    ]
  },
], [
  [{ text: "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7", url: "https://t.me/cryptapaysupport" }]
]);

async function helpHandler(ctx) {
  try {
    const { text, options } = helpMessage;
    await ctx.replyWithMarkdown(text, options);
  } catch (error) {
    console.error('Error:', error);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

module.exports = { helpHandler };