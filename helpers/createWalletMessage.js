function getCreateWalletMessage(type, params = {}) {
  const messages = {
    selectCreateNetwork: {
      text: "üåê *–í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫—á–µ–π–Ω –¥–ª—è –∫–æ—à–µ–ª—å–∫–∞*\n\n" +
        "*EVM* (Ethereum, BSC, Polygon)\n" +
        "‚îî _–ü–æ–¥–¥–µ—Ä–∂–∫–∞ DeFi, NFT –∏ —Å–º–∞—Ä—Ç-–∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤_\n\n" +
        "*TRON* (TRC-20)\n" +
        "‚îî _–ë—ã—Å—Ç—Ä—ã–µ –∏ –¥–µ—à–µ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏_",
      options: {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: params.buttons || [
            [{ text: "EVM", callback_data: "create_wallet_evm" }],
            [{ text: "TRON", callback_data: "create_wallet_tron" }]
          ]
        }
      }
    },

    walletAlreadyExists: {
      text: `‚ö†Ô∏è *–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –≤ —Å–µ—Ç–∏ ${params.network === 'evm' ? 'EVM' : 'TRON'}*\n\n` +
        `üí≥ *–ê–¥—Ä–µ—Å:* \`${params.address}\`\n\n` +
        `üí° –ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π, —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–∫–ª—é—á–∏—Ç–µ —Ç–µ–∫—É—â–∏–π`,
      options: {
        parse_mode: "Markdown",
        reply_markup: {
          inline_keyboard: [
            [{
              text: `üîå –û—Ç–∫–ª—é—á–∏—Ç—å`,
              callback_data: `disconnect_wallet_${params.network || "unknown"}`
            }]
          ]
        }
      }
    },

    walletCreated: {
      text: `üèÜ *–ù–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫ –≤ —Å–µ—Ç–∏ ${params.network === 'evm' ? 'EVM' : 'TRON'} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω*\n\n` +
        `üí≥ *–ê–¥—Ä–µ—Å:* \`${params.address}\`\n\n` +
        `üîë *–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á:* \`${params.privateKey}\`\n\n` +
        `‚ö†Ô∏è *–í–ê–ñ–ù–û:* –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ. –ë–µ–∑ –Ω–µ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–æ—à–µ–ª—å–∫—É –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!`,
      options: {
        parse_mode: "Markdown"
      }
    }
  };

  return messages[type] || { text: "‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ", options: { parse_mode: "Markdown" } };
}

module.exports = {
  getCreateWalletMessage
};
