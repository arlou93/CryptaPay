const { messageCreator } = require("../helpers/messageCreator");

const User = require("../models/User.model");
const { redis } = require("../config/redis");
const { walletNotFoundMessage } = require("../helpers/commonMessages");

const walletDisconnectedMessage = messageCreator([
  {
    title: "üîå *–ö–æ—à–µ–ª–µ–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω*",
    items: [
      "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ"
    ]
  }
], [
  [{ text: "üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å –¥—Ä—É–≥–æ–π –∫–æ—à–µ–ª–µ–∫", callback_data: "connect" }],
  [{ text: "üîë –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π", callback_data: "create" }]
]);

async function disconnectWallet(ctx) {
  const chatId = ctx.from.id;

  const existingUser = await User.findOne({ where: { telegramId: chatId } });
  if (!existingUser) {
    const { text, options } = walletNotFoundMessage

    await ctx.replyWithMarkdown(
      text, options
    );
    return;
  }

  await User.destroy({ where: { telegramId: chatId } });
  await redis.del(`wallet:${chatId}`);

  const { text, options } = walletDisconnectedMessage

  await ctx.replyWithMarkdown(
    text, options
  );
}

module.exports = { disconnectWallet };
