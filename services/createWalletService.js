const { redis } = require("../config/redis");
const User = require("../models/User.model");
const { Wallet } = require("ethers");

async function createWallet(ctx) {
  const chatId = ctx.from.id;
  const username = ctx.from.username || null;

  let existingWallet = await redis.get(`wallet:${chatId}`);
  if (!existingWallet) {
    const user = await User.findOne({ where: { telegramId: chatId } });
    if (user) {
      existingWallet = user.walletAddress;
      await redis.set(`wallet:${chatId}`, existingWallet, 'EX', 3600);
    }
  }

  if (existingWallet) {
    await ctx.reply(
      `*‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ—à–µ–ª–µ–∫*\n\n` +
      `–¢–µ–∫—É—â–∏–π –∞–¥—Ä–µ—Å:\n\`${existingWallet}\`\n\n` +
      `–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ:\n` +
      `1Ô∏è‚É£ –°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫–ª—é—á–∏—Ç–µ —Ç–µ–∫—É—â–∏–π —á–µ—Ä–µ–∑ /disconnect\n` +
      `2Ô∏è‚É£ –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫`,
      { parse_mode: 'Markdown' }
    );
    return;
  }

  try {
    const wallet = Wallet.createRandom();
    await User.create({ telegramId: chatId, walletAddress: wallet.address, username });
    await redis.set(`wallet:${chatId}`, wallet.address, 'EX', 3600);

    await ctx.reply(
      `*üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫ —Å–æ–∑–¥–∞–Ω*\n\n` +
      `üìç *–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:*\n\`${wallet.address}\`\n\n` +
      `*‚ö†Ô∏è –í–ê–ñ–ù–û: –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á*\n` +
      `‚Ä¢ –•—Ä–∞–Ω–∏—Ç–µ –µ–≥–æ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ\n` +
      `‚Ä¢ –ù–∏–∫–æ–º—É –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ\n` +
      `‚Ä¢ –ü–æ—Ç–µ—Ä—è –∫–ª—é—á–∞ = –ø–æ—Ç–µ—Ä—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ—à–µ–ª—å–∫—É\n\n` +
      `*–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á:*`,
      { parse_mode: 'Markdown' }
    );
    await ctx.reply(wallet.privateKey);
  } catch (error) {
    await ctx.reply(
      `*‚ùå –£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫*\n\n` +
      `–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–æ—à–µ–ª–µ–∫.\n` +
      `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.`,
      { parse_mode: 'Markdown' }
    );
  }
}

module.exports = { createWallet };
